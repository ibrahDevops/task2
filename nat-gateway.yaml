AWSTemplateFormatVersion: 2010-09-09

Description: This template creates a nat gateway in each public subnet
 
Parameters: 
  ExportVpcStackName:
    Description: The name of the vpc stack that exports values
    Type: String 

Resources:
# Allocate Elastic IP Address (EIP 1)
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: VPC
      Tags:
        - Key: Name
          Value: EIP 1

# Allocate Elastic IP Address (EIP 2)
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC 
      Tags:
        - Key: Name 
          Value: EIP 2


# EGRESS ONLY INTERRNET GATEWAY 

  EgressOnlyInternetGateway:
    Type: AWS::EC2::EgressOnlyInternetGateway
    Properties: 
      VpcId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC
      Tags:
        - Key: Name 
          Value: Egress Internet Gateway

  CustomRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name 
          Value: Custom Route Table 
    VpcId: 
      Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC

    Route:
      Type: AWS::EC2::Route
      DependsOn: GatewayToInternet
      Properties:
         RouteTableId: !Ref CustomRouteTable
         DestinationCidrBlock: 0.0.0.0/0
         GatewayId: !Ref EgressOnlyInternetGateway

    PrivateSubnet1CustomRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: 
          Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet1
        RouteTableId: !Ref CustomRouteTable

    PrivateSubnet2CustomRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: 
          Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet2
        RouteTableId: !Ref CustomRouteTable

    PrivateSubnet3CustomRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: 
          Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet3
        RouteTableId: !Ref CustomRouteTable


    PrivateSubnet4CustomRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: 
          Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet4
        RouteTableId: !Ref CustomRouteTable


# CREATING NAT-GATEWAYS 

# Create Nat Gateway 1 in Public Subnet 1    
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: 
      # here i will reference an output from 
      # another cloudformation template i will use the import value intrinsic func 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet1
      Tags:
        - Key: Name 
          Value: Nat-Gateway Public Subnet 1

# Create Nat Gateway 2 in Public Subnet 2
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet2
      Tags:
        - Key: Name 
          Value: Nat-Gateway Public Subnet 2



# Create Private Route Table 1 
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: Private Route Table 1
      VpcId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC


# Add a route to point internet-bound traffic to Nat Gateway 1      
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1




# Associate Private Subnet 1 with Private Route Table 1
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet1

# Associate Private Subnet 3 with Private Route Table 1
  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable3
      SubnetId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet3




# Create Private Route Table 2     
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Private Route Table 2
      VpcId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC



# Add a route to point internet-bound traffic to Nat Gateway 2         
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2





# Associate Private Subnet 2 with Private Route Table 2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet2

# Associate Private Subnet 4 with Private Route Table 2
  PrivateSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet4